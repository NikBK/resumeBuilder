{"version":3,"sources":["Components/QuestionAnswers.js","Components/PersonalDetails.js","Components/Education.js","Components/Experience.js","Components/Projects.js","Components/Hobbies.js","Components/Resume.js","App.js","reportWebVitals.js","index.js"],"names":["qa","q","a","identity","InputField","placeholder","handleChange","useState","showLegend","setShowLegend","className","onChange","type","id","onClick","PersonalDetails","e","map","el","target","value","DatePicker","Education","TextArea","rows","columns","CheckType","style","backgroundColor","color","minWidth","textAlign","cursor","margin","padding","height","Experience","Projects","Hobbies","filter","obj","href","EducationDetails","ProjectDetails","split","trim","SkillsDetails","display","gridTemplateColumns","res","star","alignItems","starMaker","ExperienceDetails","stars","Math","round","i","push","fontSize","Resume","ref","createRef","pdfName","toString","console","log","targetRef","filename","toPdf","Task","number","text","window","location","pathname","TaskContainer","CautionMessage","App","nextSection","page","setPage","finalPage","length","useEffect","noValidate","path","exact","to","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.edba552c.chunk.js","sourcesContent":["const qa = [\r\n    // Personal details\r\n    {\r\n        q: 'Name',\r\n        a: '',\r\n        identity: 'Name*'\r\n    },\r\n    {\r\n        q: 'Email',\r\n        a: '',\r\n        identity: 'Email*'\r\n    },\r\n    {\r\n        q: 'Mobile',\r\n        a: '',\r\n        identity: 'Mobile*'\r\n    },\r\n    {\r\n        q: 'LinkedIn',\r\n        a: '',\r\n        identity: 'LinkedIn*'\r\n    },\r\n    {\r\n        q: 'Github',\r\n        a: '',\r\n        identity: 'Github*'\r\n    },\r\n    {\r\n        q: 'ex: Java 4, JS 3',\r\n        a: '',\r\n        identity: 'ex: Java 4, JS 3*'\r\n    },\r\n\r\n    // Education\r\n    {\r\n        q: 'School/College/University',\r\n        a: '',\r\n        identity: 'School/College/University*'\r\n    },\r\n    {\r\n        q: 'Degree',\r\n        a: '',\r\n        identity: 'Degree*'\r\n    },\r\n    {\r\n        q: 'Discipline',\r\n        a: '',\r\n        identity: 'Discipline*'\r\n    },\r\n    {\r\n        q: 'Marks/Percentage/CGPA',\r\n        a: '',\r\n        identity: 'Marks/Percentage/CGPA*'\r\n    },\r\n    {\r\n        q: 'Education From',\r\n        a: '',\r\n        identity: 'Education From*'\r\n    },\r\n    {\r\n        q: 'Education To',\r\n        a: '',\r\n        identity: 'Education To*'\r\n    },\r\n\r\n    // Experience\r\n    {\r\n        q: 'Organization',\r\n        a: '',\r\n        identity: 'Organization*'\r\n    },\r\n    {\r\n        q: 'Position',\r\n        a: '',\r\n        identity: 'Position*'\r\n    },\r\n    {\r\n        q: 'Present Job',\r\n        a: '',\r\n        identity: 'Present Job'\r\n    },\r\n    {\r\n        q: 'Experience From',\r\n        a: '',\r\n        identity: 'Experience From*'\r\n    },\r\n    {\r\n        q: 'Experience To',\r\n        a: '',\r\n        identity: 'Experience To*'\r\n    },\r\n    {\r\n        q: 'Experience Description',\r\n        a: '',\r\n        identity: 'Experience Description*'\r\n    },\r\n\r\n    // Project\r\n    {\r\n        q: 'Title',\r\n        a: '',\r\n        identity: 'Title*'\r\n    },\r\n    {\r\n        q: 'Link',\r\n        a: '',\r\n        identity: 'Link*'\r\n    },\r\n    {\r\n        q: 'Project Description',\r\n        a: '',\r\n        identity: 'Project Description*'\r\n    },\r\n\r\n    // Hobbies\r\n    {\r\n        q: 'Hobbies Description',\r\n        a: '',\r\n        identity: 'Hobbies Description*'\r\n    }\r\n\r\n]\r\n\r\nexport default qa;","import { useState } from \"react\";\r\nimport qa from './QuestionAnswers';\r\n\r\nconst InputField = ({ placeholder, handleChange }) => {\r\n    const [showLegend, setShowLegend] = useState(false);\r\n    return <div className='input-element'>\r\n        <fieldset>\r\n            {showLegend && {} && <legend>{placeholder}</legend>}\r\n            <input\r\n                onChange={handleChange} \r\n                type='text' \r\n                id={placeholder} \r\n                placeholder={placeholder} \r\n                onClick={() => setShowLegend(true)} />\r\n        </fieldset>\r\n    </div>\r\n}\r\n\r\nconst PersonalDetails = () => {\r\n    const handleChange = (e) => {\r\n        qa.map(el => {\r\n            if(e.target.id === el.identity){\r\n                return el.a = e.target.value;\r\n            }\r\n        })\r\n    }\r\n    return <>\r\n        <div id='input-fields-container'>\r\n            <InputField placeholder='Name*' handleChange={handleChange} />\r\n            <InputField placeholder='Email*' handleChange={handleChange} />\r\n            <InputField placeholder='Mobile*' handleChange={handleChange} />\r\n            <InputField placeholder='LinkedIn*' handleChange={handleChange} />\r\n            <InputField placeholder='Github*' handleChange={handleChange} />\r\n            <InputField placeholder='ex: Java 4, JS 3*' handleChange={handleChange} />\r\n        </div>\r\n    </>\r\n}\r\n\r\nexport default PersonalDetails;","import { useState } from \"react\";\r\nimport qa from './QuestionAnswers';\r\n\r\nconst InputField = ({ placeholder, handleChange }) => {\r\n    const [showLegend, setShowLegend] = useState(false);\r\n    return <div className='input-element'>\r\n        <fieldset>\r\n            {showLegend && {} && <legend>{placeholder}</legend>}\r\n            <input \r\n                onChange={handleChange}\r\n                id={placeholder} \r\n                type='text'\r\n                placeholder={placeholder} \r\n                onClick={() => setShowLegend(true)} />\r\n        </fieldset>\r\n    </div>\r\n}\r\n\r\nconst DatePicker = ({ placeholder, handleChange }) => {\r\n    return <div className='input-element'>\r\n        <fieldset>\r\n            <legend>{placeholder}</legend>\r\n            <input onChange={handleChange} id={placeholder} type='date' placeholder={placeholder} />\r\n        </fieldset>\r\n    </div>\r\n}\r\n\r\nconst Education = () => {\r\n    const handleChange = (e) => {\r\n        qa.map(el => {\r\n            if(e.target.id === el.identity){\r\n                return el.a = e.target.value;\r\n            }\r\n        })\r\n    }\r\n    return <>\r\n        <div id='input-fields-container'>\r\n            <InputField handleChange={handleChange} placeholder='School/College/University*' />\r\n            <InputField handleChange={handleChange} placeholder='Degree*' />\r\n            <InputField handleChange={handleChange} placeholder='Discipline*' />\r\n            <InputField handleChange={handleChange} placeholder='Marks/Percentage/CGPA*' />\r\n            <DatePicker handleChange={handleChange} placeholder='Education From*' />\r\n            <DatePicker handleChange={handleChange} placeholder='Education To*' />\r\n        </div>\r\n    </>\r\n}\r\n\r\nexport default Education;","import { useState } from \"react\";\r\nimport qa from './QuestionAnswers';\r\nimport './resumeStyle.css';\r\n\r\nconst InputField = ({ placeholder, handleChange }) => {\r\n    const [showLegend, setShowLegend] = useState(false);\r\n    return <div className='input-element'>\r\n        <fieldset>\r\n            {showLegend && {} && <legend>{placeholder}</legend>}\r\n            <input \r\n                onChange={handleChange}\r\n                id={placeholder} \r\n                type='text' \r\n                placeholder={placeholder} \r\n                onClick={() => setShowLegend(true)} />\r\n        </fieldset>\r\n    </div>\r\n}\r\n\r\nconst DatePicker = ({ placeholder, handleChange }) => {\r\n    return <div className='input-element'>\r\n        <fieldset>\r\n            <legend>{placeholder}</legend>\r\n            <input \r\n                onChange={handleChange} \r\n                id={placeholder} \r\n                type='date' \r\n                placeholder={placeholder} />\r\n        </fieldset>\r\n    </div>\r\n}\r\n\r\nconst TextArea = ({ placeholder, handleChange }) => {\r\n    const [showLegend, setShowLegend] = useState(false);\r\n    return <div className='input-element'>\r\n        <fieldset>\r\n            {showLegend && {} && <legend>{placeholder}</legend>}\r\n            <textarea \r\n                type='text' \r\n                rows='5' \r\n                columns='20' \r\n                placeholder={placeholder}\r\n                onChange={handleChange}\r\n                id={placeholder}  \r\n                onClick={() => setShowLegend(true)} />\r\n        </fieldset>\r\n    </div>\r\n}\r\n\r\nconst CheckType = ({ placeholder, handleChange }) => {\r\n    const [showLegend, setShowLegend] = useState(false);\r\n    return <div className='input-element'>\r\n        <fieldset>\r\n            {showLegend && {} && <legend>{placeholder}</legend>}\r\n            <div style={{ backgroundColor: 'white', color: 'black', minWidth: '400px', textAlign: 'left', cursor: 'pointer' }} >\r\n                <input \r\n                    onChange={handleChange}\r\n                    id={placeholder}\r\n                    type='checkbox' \r\n                    style={{ margin: '5px', padding: '0', height: '20px', minWidth: '10px' }} />\r\n                <span onClick={() => setShowLegend(true)}>{placeholder}</span>\r\n            </div>\r\n        </fieldset>\r\n    </div>\r\n}\r\n\r\nconst Experience = () => {\r\n    const handleChange = (e) => {\r\n        qa.map(el => {\r\n            if(e.target.id === el.identity){\r\n                return el.a = e.target.value;\r\n            }\r\n        })\r\n    }\r\n    return <>\r\n        <div id='input-fields-container'>\r\n            <InputField handleChange={handleChange} placeholder='Organization*' />\r\n            <InputField handleChange={handleChange} placeholder='Position*' />\r\n            <CheckType handleChange={handleChange} placeholder='Present Job' />\r\n            <DatePicker handleChange={handleChange} placeholder='Experience From*' />\r\n            <DatePicker handleChange={handleChange} placeholder='Experience To*' />\r\n            <TextArea handleChange={handleChange} placeholder='Experience Description*' />\r\n        </div>\r\n    </>\r\n}\r\n\r\nexport default Experience;","import { useState } from \"react\";\r\nimport qa from './QuestionAnswers';\r\nimport './resumeStyle.css';\r\n\r\nconst InputField = ({ placeholder, handleChange  }) => {\r\n    const [showLegend, setShowLegend] = useState(false);\r\n    return <div className='input-element'>\r\n        <fieldset>\r\n            {showLegend && {} && <legend>{placeholder}</legend>}\r\n            <input \r\n                onChange={handleChange}\r\n                id={placeholder} \r\n                type='text' \r\n                placeholder={placeholder} \r\n                onClick={() => setShowLegend(true)} />\r\n        </fieldset>\r\n    </div>\r\n}\r\n\r\nconst TextArea = ({ placeholder, handleChange  }) => {\r\n    const [showLegend, setShowLegend] = useState(false);\r\n    return <div className='input-element'>\r\n        <fieldset>\r\n            {showLegend && {} && <legend>{placeholder}</legend>}\r\n            <textarea \r\n                type='text' \r\n                rows='5' \r\n                columns='20' \r\n                placeholder={placeholder} \r\n                onChange={handleChange}\r\n                id={placeholder}\r\n                onClick={() => setShowLegend(true)} />\r\n        </fieldset>\r\n    </div>\r\n}\r\n\r\nconst Projects = () => {\r\n    const handleChange = (e) => {\r\n        qa.map(el => {\r\n            if(e.target.id === el.identity){\r\n                return el.a = e.target.value;\r\n            }\r\n        })\r\n    }\r\n    return <>\r\n        <div id='input-fields-container'>\r\n            <InputField handleChange={handleChange} placeholder='Title*' />\r\n            <InputField handleChange={handleChange} placeholder='Link*' />\r\n            <TextArea handleChange={handleChange} placeholder='Project Description*' />\r\n        </div>\r\n    </>\r\n}\r\n\r\nexport default Projects;","import { useState } from \"react\";\r\nimport qa from './QuestionAnswers';\r\nimport './resumeStyle.css';\r\n\r\nconst TextArea = ({ placeholder, handleChange }) => {\r\n    const [showLegend, setShowLegend] = useState(false);\r\n    return <div className='input-element'>\r\n        <fieldset>\r\n            {showLegend && {} && <legend>{placeholder}</legend>}\r\n            <textarea \r\n                type='text' \r\n                rows='5' \r\n                columns='20' \r\n                placeholder={placeholder}\r\n                onChange={handleChange}\r\n                id={placeholder} \r\n                onClick={() => setShowLegend(true)} />\r\n        </fieldset>\r\n    </div>\r\n}\r\n\r\nconst Hobbies = () => {\r\n    const handleChange = (e) => {\r\n        qa.map(el => {\r\n            if(e.target.id === el.identity){\r\n                return el.a = e.target.value;\r\n            }\r\n        })\r\n    }\r\n    return <>\r\n        <div id='input-fields-container'>\r\n            <TextArea handleChange={handleChange} placeholder='Hobbies Description*' />\r\n        </div>\r\n    </>\r\n}\r\n\r\nexport default Hobbies;","import React from \"react\";\r\nimport qa from \"./QuestionAnswers\";\r\nimport './resumeStyle.css'\r\nimport ReactToPdf from \"react-to-pdf\";\r\nimport { createRef } from 'react';\r\n\r\nconst PersonalDetails = () => {\r\n    return <>\r\n        <div className='personal-details'>\r\n            <h3>{qa.filter(obj => obj.q == 'Name')[0].a}</h3>\r\n            <div>Email: {qa.filter(obj => obj.q == 'Email')[0].a}</div>\r\n            <div>Contact no: {qa.filter(obj => obj.q == 'Mobile')[0].a}</div>\r\n            <div className='external-links'>\r\n                <a href={qa.filter(obj => obj.q == 'LinkedIn')[0].a} target='_blank'>LinkedIn</a>\r\n                <a href={qa.filter(obj => obj.q == 'Github')[0].a} target='_blank'>Github</a>\r\n            </div>\r\n        </div>\r\n    </>\r\n}\r\n\r\nconst EducationDetails = () => {\r\n    return <>\r\n        <div className='education-details'>\r\n            <div className='section-heading'>Education</div>\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        <td>Year</td>\r\n                        <td>Degree/Examination</td>\r\n                        <td>Institution/Board</td>\r\n                        <td>CGPA/Percentage</td>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <td>{qa.filter(obj => obj.q == 'Education To')[0].a}</td>\r\n                        <td>{qa.filter(obj => obj.q == 'Degree')[0].a} ( {qa.filter(obj => obj.q == 'Discipline')[0].a} )</td>\r\n                        <td>{qa.filter(obj => obj.q == 'School/College/University')[0].a}</td>\r\n                        <td>{qa.filter(obj => obj.q == 'Marks/Percentage/CGPA')[0].a}</td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    </>\r\n}\r\n\r\nconst ProjectDetails = () => {\r\n    return <>\r\n        <div className='projects-details'>\r\n            <div className='section-heading'>Projects</div>\r\n            <div>\r\n                <h5>{qa.filter(obj => obj.q == 'Title')[0].a} | </h5>\r\n                <a href={qa.filter(obj => obj.q == 'Link')[0].a} target='_blank'>link</a>\r\n                <div className='project-description-container'>\r\n                    {qa.filter(obj => obj.q == 'Project Description')[0].a\r\n                        .split('.')\r\n                        .map(el => {\r\n                            if (el.trim() != '')\r\n                                return <li>{el}</li>\r\n                        })\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </>\r\n}\r\n\r\nconst SkillsDetails = () => {\r\n    return <>\r\n        <div className='skills-details'>\r\n            <div className='section-heading'>Skills</div>\r\n            <div className='skills-container'>\r\n                <div style={{ display: 'grid', gridTemplateColumns: 'repeat(2, auto)' }}>\r\n                    {qa.filter(obj => obj.q == 'ex: Java 4, JS 3')[0].a\r\n                        .split(',')\r\n                        .map(el => {\r\n                            let res = el.trim().split(' ');\r\n                            let star = res[1];\r\n                            return <>\r\n                                <div style={{ display: \"flex\", alignItems: 'center' }}>\r\n                                    <span>{res[0]} </span>\r\n                                    {starMaker(star)}\r\n                                </div>\r\n                            </>\r\n                        })\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </>\r\n}\r\n\r\nconst ExperienceDetails = () => {\r\n    return <>\r\n        <div className='experience-details'>\r\n            <div className='section-heading'>Experience</div>\r\n            <div>\r\n                <h5>{qa.filter(obj => obj.q == 'Organization')[0].a} | </h5>\r\n                <span><i>{qa.filter(obj => obj.q == 'Position')[0].a}</i></span>\r\n                <div className='experience-info'>\r\n                    <div>{qa.filter(obj => obj.q == 'Experience Description')[0].a}</div>\r\n                    <div>From : {qa.filter(obj => obj.q == 'Experience From')[0].a}</div>\r\n                    <div>Till : {qa.filter(obj => obj.q == 'Experience To')[0].a}</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </>\r\n}\r\n\r\nconst Resume = () => {\r\n    const ref = createRef();\r\n    let pdfName = qa.filter(el => el.q == 'Name')[0].a.toString() + 'Resume';\r\n    console.log(pdfName);\r\n\r\n    return (\r\n        <>\r\n            <div ref={ref} className='resume-container'>\r\n\r\n                <PersonalDetails />\r\n\r\n                <EducationDetails />\r\n\r\n                <ProjectDetails />\r\n\r\n                <SkillsDetails />\r\n\r\n                <ExperienceDetails />\r\n\r\n            </div>\r\n\r\n            <ReactToPdf targetRef={ref} filename={pdfName}>\r\n                {({ toPdf }) => (\r\n                    <button onClick={toPdf} id='download'>Generate pdf</button>\r\n                )}\r\n            </ReactToPdf>\r\n        </>\r\n    )\r\n}\r\n\r\nfunction starMaker(star) {\r\n    let stars = [];\r\n    star = star > 5 ? 5 : Math.round(star);\r\n    for (let i = 0; i < star; i++) {\r\n        stars.push(<span style={{ display: 'inline-block', fontSize: 25, color: '#f8b715' }}> &#9733; </span>);\r\n    }\r\n    if (star < 5) {\r\n        for (let i = star; i < 5; i++)\r\n            stars.push(<span style={{ display: 'inline-block', fontSize: 25, color: 'grey' }}> &#9733; </span>)\r\n    }\r\n    return stars\r\n}\r\n\r\nexport default Resume;","import './App.css';\nimport React, { useEffect } from 'react';\nimport { useState } from 'react';\nimport PersonalDetails from './Components/PersonalDetails';\nimport Education from './Components/Education';\nimport Experience from './Components/Experience';\nimport Projects from './Components/Projects';\nimport Hobbies from './Components/Hobbies';\nimport Resume from './Components/Resume';\nimport { BrowserRouter as Router, Route, Switch, Link } from 'react-router-dom';\n\nconst Task = ({ number, text }) => {\n  let id = '';\n  if (window.location.pathname == '/' && number == 1) {\n    id = 'Active';\n  }\n  else if (window.location.pathname == '/education' && number == 2) {\n    id = 'Active';\n  }\n  else if (window.location.pathname == '/experience' && number == 3) {\n    id = 'Active';\n  }\n  else if (window.location.pathname == '/projects' && number == 4) {\n    id = 'Active';\n  }\n  else if (window.location.pathname == '/hobbies' && number == 5) {\n    id = 'Active';\n  }\n  return <div className='task'>\n    <span className='task-number' id={id} >{number}</span>\n    <div>{text}</div>\n  </div>\n}\n\nconst TaskContainer = () => {\n  return <>\n    <div id='tasks'>\n      <Task number='1' text='Personal Details' />\n      <span className='dash'></span>\n\n      <Task number='2' text='Education' />\n      <span className='dash'></span>\n\n      <Task number='3' text='Experience' />\n      <span className='dash'></span>\n\n      <Task number='4' text='Projects' />\n      <span className='dash'></span>\n\n      <Task number='5' text='Hobbies/Achievements' />\n    </div>\n  </>\n}\n\nconst CautionMessage = () => {\n  return <>\n    <p>Do not worry, your previous data is already saved.</p>\n  </>\n}\n\nfunction App() {\n\n  const nextSection = ['/', '/education', '/experience', '/projects', '/hobbies', '/Success'];\n  const [page, setPage] = useState(0);\n  let finalPage = nextSection.length - 1;\n\n  useEffect(() => {\n    setPage(page);\n  }, [page])\n\n\n  return (\n    <div className=\"App\">\n      <div className=\"App-header\">\n        <h1>We create your resume!</h1>\n\n        <form noValidate>\n\n          <TaskContainer />\n\n          <Router>\n\n            <div id='questions-container'>\n\n              <Switch>\n\n                <Route path='/' exact >\n                  <CautionMessage />\n                  <PersonalDetails />\n                </Route>\n\n                <Route path='/education' >\n                  <CautionMessage />\n                  <Education />\n                </Route>\n\n                <Route path='/experience' >\n                  <CautionMessage />\n                  <Experience />\n                </Route>\n\n                <Route path='/projects' >\n                  <CautionMessage />\n                  <Projects />\n                </Route>\n\n                <Route path='/hobbies' >\n                  <CautionMessage />\n                  <Hobbies />\n                </Route>\n\n                <Route path='/Success'  >\n                  <h1>Your resume is Ready!</h1>\n                  {/* <button id='download'>Download Resume</button> */}\n                  <Resume />\n                </Route>\n\n              </Switch>\n\n            </div>\n\n            {page > 0 &&\n              <Link to={nextSection[page - 1]}>\n                <button id='next' onClick={() => setPage(page - 1)}>\n                  prev\n                </button>\n              </Link>\n            }\n            {page < finalPage &&\n              <Link to={nextSection[page + 1]}>\n                <button id='next' onClick={() => setPage(page + 1)}>\n                  Next\n                </button>\n              </Link>\n            }\n\n          </Router>\n\n        </form>\n\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}